{"abi":[{"type":"fallback","stateMutability":"payable"},{"type":"receive","stateMutability":"payable"},{"type":"function","name":"allowance","inputs":[{"name":"owner","type":"address","internalType":"address"},{"name":"spender","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"approve","inputs":[{"name":"spender","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"balanceOf","inputs":[{"name":"owner","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"decimals","inputs":[],"outputs":[{"name":"","type":"uint8","internalType":"uint8"}],"stateMutability":"view"},{"type":"function","name":"getSkipNFT","inputs":[{"name":"owner","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"mirrorERC721","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"name","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"setSkipNFT","inputs":[{"name":"skipNFT","type":"bool","internalType":"bool"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"symbol","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"totalSupply","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"transfer","inputs":[{"name":"to","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"transferFrom","inputs":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"event","name":"Approval","inputs":[{"name":"owner","type":"address","indexed":true,"internalType":"address"},{"name":"spender","type":"address","indexed":true,"internalType":"address"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"SkipNFTSet","inputs":[{"name":"owner","type":"address","indexed":true,"internalType":"address"},{"name":"status","type":"bool","indexed":false,"internalType":"bool"}],"anonymous":false},{"type":"event","name":"Transfer","inputs":[{"name":"from","type":"address","indexed":true,"internalType":"address"},{"name":"to","type":"address","indexed":true,"internalType":"address"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"error","name":"ApprovalCallerNotOwnerNorApproved","inputs":[]},{"type":"error","name":"DNAlreadyInitialized","inputs":[]},{"type":"error","name":"DNNotInitialized","inputs":[]},{"type":"error","name":"FnSelectorNotRecognized","inputs":[]},{"type":"error","name":"InsufficientAllowance","inputs":[]},{"type":"error","name":"InsufficientBalance","inputs":[]},{"type":"error","name":"InvalidUnit","inputs":[]},{"type":"error","name":"LinkMirrorContractFailed","inputs":[]},{"type":"error","name":"MirrorAddressIsZero","inputs":[]},{"type":"error","name":"SenderNotMirror","inputs":[]},{"type":"error","name":"TokenDoesNotExist","inputs":[]},{"type":"error","name":"TotalSupplyOverflow","inputs":[]},{"type":"error","name":"TransferCallerNotOwnerNorApproved","inputs":[]},{"type":"error","name":"TransferFromIncorrectOwner","inputs":[]},{"type":"error","name":"TransferToZeroAddress","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","getSkipNFT(address)":"274e430b","mirrorERC721()":"4ef41efc","name()":"06fdde03","setSkipNFT(bool)":"2a6a935d","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DNAlreadyInitialized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DNNotInitialized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FnSelectorNotRecognized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidUnit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LinkMirrorContractFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MirrorAddressIsZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SenderNotMirror\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenDoesNotExist\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TotalSupplyOverflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"SkipNFTSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getSkipNFT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mirrorERC721\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"skipNFT\",\"type\":\"bool\"}],\"name\":\"setSkipNFT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"vectorized.eth (@optimizoor)Quit (@0xQuit)Michael Amadi (@AmadiMichaels)cygaar (@0xCygaar)Thomas (@0xjustadev)Harrison (@PopPunkOnChain)\",\"details\":\"Note: - The ERC721 data is stored in this base DN404 contract, however a   DN404Mirror contract ***MUST*** be deployed and linked during   initialization.\",\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"details\":\"Thrown when setting an NFT token approval and the caller is not the owner or an approved operator.\"}],\"DNAlreadyInitialized()\":[{\"details\":\"Thrown when attempting to double-initialize the contract.\"}],\"DNNotInitialized()\":[{\"details\":\"The function can only be called after the contract has been initialized.\"}],\"FnSelectorNotRecognized()\":[{\"details\":\"The function selector is not recognized.\"}],\"InsufficientAllowance()\":[{\"details\":\"Thrown when a spender attempts to transfer tokens with an insufficient allowance.\"}],\"InsufficientBalance()\":[{\"details\":\"Thrown when attempting to transfer or burn more tokens than sender's balance.\"}],\"InvalidUnit()\":[{\"details\":\"The unit must be greater than zero and less than `2**96`.\"}],\"LinkMirrorContractFailed()\":[{\"details\":\"Thrown when the link call to the mirror contract reverts.\"}],\"MirrorAddressIsZero()\":[{\"details\":\"Thrown when the mirror address provided for initialization is the zero address.\"}],\"SenderNotMirror()\":[{\"details\":\"Thrown when the caller for a fallback NFT function is not the mirror contract.\"}],\"TokenDoesNotExist()\":[{\"details\":\"Thrown when checking the owner or approved address for a non-existent NFT.\"}],\"TotalSupplyOverflow()\":[{\"details\":\"Thrown when minting an amount of tokens that would overflow the max tokens.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"details\":\"Thrown when transferring an NFT and the caller is not the owner or an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"details\":\"Thrown when transferring an NFT and the from address is not the current owner.\"}],\"TransferToZeroAddress()\":[{\"details\":\"Thrown when attempting to transfer tokens to the zero address.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `amount` tokens is approved by `owner` to be used by `spender`.\"},\"SkipNFTSet(address,bool)\":{\"details\":\"Emitted when `owner` sets their skipNFT flag to `status`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `amount` tokens is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the amount of tokens that `spender` can spend on behalf of `owner`.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Emits a {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `owner`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token. Defaults to 18. Does not affect DN404's internal calculations. Will only affect the frontend UI on most protocols.\"},\"getSkipNFT(address)\":{\"details\":\"Returns true if minting and transferring ERC20s to `owner` will skip minting NFTs. Returns false otherwise.\"},\"mirrorERC721()\":{\"details\":\"Returns the address of the mirror NFT contract.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"setSkipNFT(bool)\":{\"details\":\"Sets the caller's skipNFT flag to `skipNFT`. Returns true. Emits a {SkipNFTSet} event.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Transfer `amount` tokens from the caller to `to`. Will burn sender NFTs if balance after transfer is less than the amount required to support the current NFT balance. Will mint NFTs to `to` if the recipient's new balance supports additional NFTs ***AND*** the `to` address's skipNFT flag is set to false. Requirements: - `from` must at least have `amount`. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `amount` tokens from `from` to `to`. Note: Does not update the allowance if it is the maximum uint256 value. Will burn sender NFTs if balance after transfer is less than the amount required to support the current NFT balance. Will mint NFTs to `to` if the recipient's new balance supports additional NFTs ***AND*** the `to` address's skipNFT flag is set to false. Requirements: - `from` must at least have `amount`. - The caller must have at least `amount` of allowance to transfer the tokens of `from`. Emits a {Transfer} event.\"}},\"stateVariables\":{\"_ADDRESS_DATA_INITIALIZED_FLAG\":{\"details\":\"The flag to denote that the address data is initialized.\"},\"_ADDRESS_DATA_OVERRIDE_PERMIT2_FLAG\":{\"details\":\"The flag to denote that the address has overridden the default Permit2 allowance.\"},\"_ADDRESS_DATA_SKIP_NFT_FLAG\":{\"details\":\"The flag to denote that the address should skip NFTs.\"},\"_APPROVAL_EVENT_SIGNATURE\":{\"details\":\"`keccak256(bytes(\\\"Approval(address,address,uint256)\\\"))`.\"},\"_PERMIT2\":{\"details\":\"The canonical Permit2 address. For signature-based allowance granting for single transaction ERC20 `transferFrom`. To enable, override `_givePermit2DefaultInfiniteAllowance()`. [Github](https://github.com/Uniswap/permit2) [Etherscan](https://etherscan.io/address/0x000000000022D473030F116dDEE9F6B43aC78BA3)\"},\"_SKIP_NFT_SET_EVENT_SIGNATURE\":{\"details\":\"`keccak256(bytes(\\\"SkipNFTSet(address,bool)\\\"))`.\"},\"_TRANSFER_EVENT_SIGNATURE\":{\"details\":\"`keccak256(bytes(\\\"Transfer(address,address,uint256)\\\"))`.\"}},\"title\":\"DN404\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"DN404 is a hybrid ERC20 and ERC721 implementation that mints and burns NFTs based on an account's ERC20 token balance.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/dn404/src/DN404.sol\":\"DN404\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":dn404/=lib/dn404/\",\":forge-std/=lib/forge-std/src/\",\":solady/=lib/dn404/lib/solady/src/\"]},\"sources\":{\"lib/dn404/src/DN404.sol\":{\"keccak256\":\"0x106d1effc6eb85f5f0b8ca209c0835b4594a2ce06c022a987d6b9476a71e72c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d08d70f2f810ca8d4bd59c59eab170aed4b4760c967443ded6ce174dca05f023\",\"dweb:/ipfs/QmT75T45hu3Tvzsp7rPCeoBgiP9KGX32Joqtzdhh6zAvhG\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.25+commit.b61c2a91"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"ApprovalCallerNotOwnerNorApproved"},{"inputs":[],"type":"error","name":"DNAlreadyInitialized"},{"inputs":[],"type":"error","name":"DNNotInitialized"},{"inputs":[],"type":"error","name":"FnSelectorNotRecognized"},{"inputs":[],"type":"error","name":"InsufficientAllowance"},{"inputs":[],"type":"error","name":"InsufficientBalance"},{"inputs":[],"type":"error","name":"InvalidUnit"},{"inputs":[],"type":"error","name":"LinkMirrorContractFailed"},{"inputs":[],"type":"error","name":"MirrorAddressIsZero"},{"inputs":[],"type":"error","name":"SenderNotMirror"},{"inputs":[],"type":"error","name":"TokenDoesNotExist"},{"inputs":[],"type":"error","name":"TotalSupplyOverflow"},{"inputs":[],"type":"error","name":"TransferCallerNotOwnerNorApproved"},{"inputs":[],"type":"error","name":"TransferFromIncorrectOwner"},{"inputs":[],"type":"error","name":"TransferToZeroAddress"},{"inputs":[{"internalType":"address","name":"owner","type":"address","indexed":true},{"internalType":"address","name":"spender","type":"address","indexed":true},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false}],"type":"event","name":"Approval","anonymous":false},{"inputs":[{"internalType":"address","name":"owner","type":"address","indexed":true},{"internalType":"bool","name":"status","type":"bool","indexed":false}],"type":"event","name":"SkipNFTSet","anonymous":false},{"inputs":[{"internalType":"address","name":"from","type":"address","indexed":true},{"internalType":"address","name":"to","type":"address","indexed":true},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false}],"type":"event","name":"Transfer","anonymous":false},{"inputs":[],"stateMutability":"payable","type":"fallback"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"stateMutability":"view","type":"function","name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function","name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}]},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function","name":"getSkipNFT","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"mirrorERC721","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"name","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"bool","name":"skipNFT","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"setSkipNFT","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"payable","type":"receive"}],"devdoc":{"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the amount of tokens that `spender` can spend on behalf of `owner`."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Emits a {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `owner`."},"decimals()":{"details":"Returns the decimals places of the token. Defaults to 18. Does not affect DN404's internal calculations. Will only affect the frontend UI on most protocols."},"getSkipNFT(address)":{"details":"Returns true if minting and transferring ERC20s to `owner` will skip minting NFTs. Returns false otherwise."},"mirrorERC721()":{"details":"Returns the address of the mirror NFT contract."},"name()":{"details":"Returns the name of the token."},"setSkipNFT(bool)":{"details":"Sets the caller's skipNFT flag to `skipNFT`. Returns true. Emits a {SkipNFTSet} event."},"symbol()":{"details":"Returns the symbol of the token."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Transfer `amount` tokens from the caller to `to`. Will burn sender NFTs if balance after transfer is less than the amount required to support the current NFT balance. Will mint NFTs to `to` if the recipient's new balance supports additional NFTs ***AND*** the `to` address's skipNFT flag is set to false. Requirements: - `from` must at least have `amount`. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Transfers `amount` tokens from `from` to `to`. Note: Does not update the allowance if it is the maximum uint256 value. Will burn sender NFTs if balance after transfer is less than the amount required to support the current NFT balance. Will mint NFTs to `to` if the recipient's new balance supports additional NFTs ***AND*** the `to` address's skipNFT flag is set to false. Requirements: - `from` must at least have `amount`. - The caller must have at least `amount` of allowance to transfer the tokens of `from`. Emits a {Transfer} event."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["dn404/=lib/dn404/","forge-std/=lib/forge-std/src/","solady/=lib/dn404/lib/solady/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/dn404/src/DN404.sol":"DN404"},"evmVersion":"paris","libraries":{}},"sources":{"lib/dn404/src/DN404.sol":{"keccak256":"0x106d1effc6eb85f5f0b8ca209c0835b4594a2ce06c022a987d6b9476a71e72c7","urls":["bzz-raw://d08d70f2f810ca8d4bd59c59eab170aed4b4760c967443ded6ce174dca05f023","dweb:/ipfs/QmT75T45hu3Tvzsp7rPCeoBgiP9KGX32Joqtzdhh6zAvhG"],"license":"MIT"}},"version":1},"id":3}